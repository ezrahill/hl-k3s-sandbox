---
- name: Ansible playbook for installing and configuring k3s
  hosts: all
  remote_user: ubuntu

  tasks:
    - name: Install k3s
      become: true
      shell: curl -sfL https://get.k3s.io | sh -

    - name: Copy kubeconfig to the local machine
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        flat: yes
      become: true

    - name: Edit kubeconfig to point to the correct server
      local_action:
        module: lineinfile
        path: ~/.kube/config
        regexp: '    server: https://127.0.0.1:6443'
        line: '    server: https://{{ lookup("env", "K3S_IP") }}:6443'
        backrefs: yes

    - name: Load K3s Environment Variables
      shell: export KUBECONFIG=~/etc/rancher/k3s/k3s.yaml

    - name: Install argocd
      shell: |
        kubectl create namespace argocd
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Install argocd CLI
      shell: |
        curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        install -m 555 argocd-linux-amd64 /usr/local/bin/argocd
        rm argocd-linux-amd64

    - name: Disable TLS in argocd
      shell: kubectl apply -f https://raw.githubusercontent.com/ezrahill/k3s-single-node/ansible/argocd-cm-insecure.yaml

    - name: Restart argocd server
      shell: kubectl rollout restart deployment argocd-server -n argocd

    - name: Create argocd ingress route
      shell: kubectl apply -f https://raw.githubusercontent.com/ezrahill/k3s-single-node/ansible/argocd-traefik.yaml

    - name: Get argocd password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password

    - name: Login to argocd
      shell: argocd login --username admin --password {{ argocd_password.stdout }} --insecure --grpc-web
